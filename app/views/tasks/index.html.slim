== render 'shared/focus_task'
h1 Tasks Table
.d-flex.justify-content-around
  .create_pointer.btn.btn-outline-warning onclick='window.location="#{tasks_path(sort_column: "created_at")}"' role="link"
    = created_at_sub
  .end_pointer.btn.btn-outline-warning onclick='window.location="#{tasks_path(sort_column: "end_time")}"' role="link"
    = end_time_sub
  .priority_pointer.btn.btn-outline-warning onclick='window.location="#{tasks_path(sort_column: "priority")}"' role="link"
    = priority_sub
  .status_pointer.btn.btn-outline-warning onclick='window.location="#{tasks_path(sort_column: "status")}"' role="link"
    = status_sub
table.table.table-hover.table-sm
table.table.table-hover.table-sm
  tr.task_category.bg-white
    th ID
    th = Task.human_attribute_name(:name)
    th = Task.human_attribute_name(:memo)
    th = Task.human_attribute_name(:end_time)
    th = Task.human_attribute_name(:status)
    th = Task.human_attribute_name(:priority)
    th = Task.human_attribute_name(:label)
    th 編集/削除
    th DONE?
  - @tasks.each do |task|
    tr.task_category.shadow-sm.rounded
      td.task_id
        = link_to task do
          = task.id
      td.task_name
        = task.name
      td = simple_format(task.memo)
        = link_to
      td class= "task_end_time #{end_time_color(task)}"
        = l task.end_time, format: :short
      td.task_status
        = task.status
      td.task_priority
        = task.priority
      td
        - task.labels.each do |label|
          .badge.badge-pill.badge-warning.mr-1
            = label.name
      td
        = link_to edit_task_path(task.id)
          i.fa.fa-edit.fa-2x
        span.delete= link_to task, method: :delete, remote: true, data:{ confirm: "Are you sure you wanna delete 【#{task.name}】?"}
          i.fa.fa-trash.fa-2x
      td = button_to 'Done', done_path(task), method: :post, class:"btn btn-outline-warning"
= paginate @tasks
